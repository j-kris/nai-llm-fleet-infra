version: '3'

tasks:

  default:
  - task: :helpers:validate
    internal: true
    vars:
      REQUIRED_TOOLS_LIST: dkp

  bootstrap:
    silent: true
    deps: [default]
    desc: DKP Bootstrap which writes out kubeconfig for easier access.
    cmds:
    - dkp create bootstrap --kubeconfig $HOME/.kube/kind-konvoy-capi-bootstrapper.cfg

  get-kind-kubeconfig:
    silent: true
    deps: [default]
    desc: Get DKP Bootstrap Cluster Kubeconfig
    cmds:
    - kind get kubeconfig -n konvoy-capi-bootstrapper -q > $HOME/.kube/konvoy-capi-bootstrapper.cfg

  watch:
    silent: true
    deps: [default]
    desc: Watch Key resources during DKP Cluster create
    cmds:
    - watch "kubectl get cluster,md,ms,machine"

  select-cluster:
    silent: true
    deps: [default]
    desc: Prompt for Existing DKP Managed CAPI Cluster and Get Kubeconfig.
    vars:
      DKP_CLUSTER_NAME:
        sh: task bootstrap:gum -- choose --header "Select existing DKP cluster instance to get kubeconfig." $(kubectl get cluster -o name -A | cut -d/ -f2)
    cmds:
    - dkp get kubeconfig -c {{.DKP_CLUSTER_NAME}} > $HOME/.kube/{{.DKP_CLUSTER_NAME}}.cfg

  switch-shell-env:
    silent: true
    deps: [default]
    desc: Prompt for Existing Cluster Instance and Set in Local Shell. ex. eval $(task dkp:switch-shell-env)
    vars:
      DKP_CLUSTER_NAME:
        sh: task bootstrap:gum -- choose --header "Select existing DKP cluster instance to load." $(kubectl get cluster -o name -A | cut -d/ -f2)
    cmds:
    - echo "export K8S_CLUSTER_NAME={{.DKP_CLUSTER_NAME}}"
    - echo "export KUBECONFIG=${HOME}/.kube/{{.DKP_CLUSTER_NAME}}.cfg"

