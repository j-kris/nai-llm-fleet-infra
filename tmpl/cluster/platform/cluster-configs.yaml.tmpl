{{ $cluster := (ds "config").k8s_cluster -}}
{{ $flux := (ds "config").flux -}}
{{ $infra := (ds "config").infra -}}
{{ $services := (ds "config").services -}}
{{ $apps := (ds "config").apps -}}
{{ $nutanix := $infra.nutanix -}}
kind: ConfigMap
apiVersion: v1
metadata:
  name: cluster-configs
data:
  cluster_name: "{{ $cluster.name | required }}"
  environment: "{{ $cluster.environment | required }}"
  cluster_profile: "{{ $cluster.profile | required }}"
{{- if $cluster.gpu_operator.enabled }}
  gpu_cuda_toolkit_version: "{{ $cluster.gpu_operator.cuda_toolkit_version | default "v1.14.3-centos7" }}"
{{- if $cluster.gpu_operator.time_slicing.enabled }}
  gpu_time_slicing_replica_count: "{{ $cluster.gpu_operator.time_slicing.replica_count | default "2" }}"
{{- end }}
{{- end }}
{{- if $services.kube_vip.enabled }}  
  kube_vip_ipam_range: "{{with $services.kube_vip.ipam_range | required }}{{.}}{{end}}"
{{- if $services.nginx_ingress.enabled }}
  kube_vip_nginx_ingress_ipam: "{{with $services.nginx_ingress.vip | required }}{{.}}/32{{end}}"
  wildcard_ingress_subdomain: "{{with $services.nginx_ingress.wildcard_ingress_subdomain | required }}{{.}}{{end}}"
  management_cluster_ingress_subdomain: "{{with $services.nginx_ingress.management_cluster_ingress_subdomain | required }}{{.}}{{end}}"
{{- end }}
{{- if $services.istio.enabled }}
  kube_vip_istio_system_ipam: "{{with $services.istio.vip | required }}{{.}}/32{{end}}"
{{- end }}
{{- end }}
{{- if $services.cert_manager.enabled }}
{{- if $services.cert_manager.aws_route53_acme_dns.enabled }}
  aws_route53_dns_zone: "{{with $services.cert_manager.aws_route53_acme_dns.zone | required }}{{.}}{{end}}"
  aws_route53_region: "{{with $services.cert_manager.aws_route53_acme_dns.region | required }}{{.}}{{end}}"
{{- end }}
{{- end }}
{{- if $nutanix.prism_central.enabled }}  
{{- if $nutanix.objects.enabled }}
  objects_host: "{{with $nutanix.objects.host | required }}{{.}}{{end}}"
  objects_port: "{{with $nutanix.objects.port | default "80" }}{{.}}{{end}}"
  objects_region: "{{with $nutanix.objects.region | default "us-east-1" }}{{.}}{{end}}"
  objects_use_ssl: "{{with $nutanix.objects.use_ssl | default "false" }}{{.}}{{end}}"
{{- end }}
{{- end }}
{{- if $apps.reference_app.enabled }}
{{- if $nutanix.objects.enabled }}
  milvus_objects_bucket_name: "{{with $apps.reference_app.rag_config.milvus_bucket_name | required }}{{.}}{{end}}"
  documents_objects_bucket_name: "{{with $apps.reference_app.rag_config.documents_bucket_name | required }}{{.}}{{end}}"
{{- end }}
  model: "{{with $apps.reference_app.llm_config.model | required }}{{.}}{{end}}"
  revision: "{{with $apps.reference_app.llm_config.revision | required }}{{.}}{{end}}"
  maxTokens: "{{with $apps.reference_app.llm_config.model | required }}{{.}}{{end}}"
  repPenalty: "{{with $apps.reference_app.llm_config.model | required }}{{.}}{{end}}"
  temperature: "{{with $apps.reference_app.llm_config.model | required }}{{.}}{{end}}"
  topP: "{{with $apps.reference_app.llm_config.model | required }}{{.}}{{end}}"
  useExistingNFS: "{{with $apps.reference_app.llm_config.useExistingNFS | default "false" }}{{.}}{{end}}"
  nfs_export: "{{with $apps.reference_app.llm_config.nfs_export | required }}{{.}}{{end}}"
  nfs_server: "{{with $apps.reference_app.llm_config.nfs_server | required }}{{.}}{{end}}"
{{- end }}